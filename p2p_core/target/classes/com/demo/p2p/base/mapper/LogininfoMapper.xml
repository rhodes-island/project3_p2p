<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.p2p.base.mapper.LogininfoMapper">
  <resultMap id="BaseResultMap" type="com.demo.p2p.base.pojo.Logininfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="usertype" jdbcType="TINYINT" property="usertype" />
    <result column="admin" jdbcType="BIT" property="admin" />
    <result column="standbyone" jdbcType="VARCHAR" property="standbyone" />
    <result column="standbytwo" jdbcType="VARCHAR" property="standbytwo" />
    <result column="standbythree" jdbcType="BIGINT" property="standbythree" />
    <result column="standbyfour" jdbcType="DECIMAL" property="standbyfour" />
  </resultMap>
  
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" >
    insert into `logininfo` (username, password, state,usertype,admin)
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{state,jdbcType=TINYINT},#{usertype,jdbcType=TINYINT},#{admin,jdbcType=TINYINT})
  </insert>
  
  <update id="updateByPrimaryKey">
    update `logininfo`
    set username = #{username,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        state = #{state,jdbcType=TINYINT},
        usertype = #{usertype,jdbcType=TINYINT},
        admin=#{admin,jdbcType=BIT},
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <sql id="base_column">
  	id, username, password, state, usertype,admin
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap">
    select <include refid="base_column" />
    from `logininfo`
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="selectAll" resultMap="BaseResultMap" >
    select <include refid="base_column" />
    from `logininfo`
  </select>
  
  <select id="getCountByUsername" resultType="int">
  	SELECT count(0) FROM logininfo WHERE username = #{username}
  </select>
  
  <select id="login" resultMap="BaseResultMap">
  	SELECT <include refid="base_column" />
  	FROM logininfo
  	WHERE username = #{username} AND password = #{password} AND usertype = #{usertype}
  </select>
  
  <select id="countByusertype" resultType="int">
  	SELECT count(id) FROM logininfo WHERE usertype = #{usertype}
  </select>
</mapper>