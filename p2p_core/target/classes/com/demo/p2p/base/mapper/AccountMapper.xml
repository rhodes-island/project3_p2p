<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.p2p.base.mapper.AccountMapper">
  <resultMap id="BaseResultMap" type="com.demo.p2p.base.pojo.Account">
   
      <result column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <result column="tradepassword" javaType="java.lang.String" jdbcType="VARCHAR" />
      <result column="usableamount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <result column="freezedamount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <result column="borrowlimitamount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <result column="version" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <result column="unreceiveinterest" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <result column="unreceiveirincipal" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <result column="unreturnamount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <result column="remainborrowlimit" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <result column="standbyone" javaType="java.lang.String" jdbcType="VARCHAR" />
      <result column="standbytwo" javaType="java.lang.String" jdbcType="VARCHAR" />
      <result column="standbythree" javaType="java.lang.Long" jdbcType="BIGINT" />
      <result column="standbyfour" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
    
  </resultMap>
  <insert id="insert">
    insert into `account` (id,version,tradePassword, usableAmount, freezedAmount, unReceiveInterest, unReceivePrincipal, unReturnAmount, remainBorrowLimit)
    values (#{id},0,#{tradepassword,jdbcType=VARCHAR}, #{usableamount,jdbcType=DECIMAL}, #{freezedamount,jdbcType=DECIMAL}, #{unreceiveinterest,jdbcType=DECIMAL}, #{unreceiveprincipal,jdbcType=DECIMAL}, #{unreturnamount,jdbcType=DECIMAL}, #{remainborrowlimit,jdbcType=DECIMAL})
  </insert>
  
  <update id="updateByPrimaryKey">
    update `account`
    set 
      version = version+1,
      tradePassword = #{tradepassword,jdbcType=VARCHAR},
      usableAmount = #{usableamount,jdbcType=DECIMAL},
      freezedAmount = #{freezedamount,jdbcType=DECIMAL},
      unReceiveInterest = #{unreceiveinterest,jdbcType=DECIMAL},
      unReceivePrincipal = #{unreceiveprincipal,jdbcType=DECIMAL},
      unReturnAmount = #{unreturnamount,jdbcType=DECIMAL},
      remainBorrowLimit = #{remainborrowlimit,jdbcType=DECIMAL}
    where id = #{id,jdbcType=BIGINT} AND version =#{version}
  </update>
  
  <sql id="base_column">
  	id, tradePassword, usableAmount, freezedAmount, version, unReceiveInterest,
    unReceivePrincipal, unReturnAmount, remainBorrowLimit
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" >
    select <include refid="base_column" />
    from `account`
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="selectAll" resultMap="BaseResultMap">
  	select <include refid="base_column" />
    from `account`
  </select>
</mapper>