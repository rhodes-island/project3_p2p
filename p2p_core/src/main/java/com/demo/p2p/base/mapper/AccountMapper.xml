<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.p2p.base.mapper.AccountMapper">
  <resultMap id="BaseResultMap" type="com.demo.p2p.base.pojo.Account">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="tradePassword" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="usableAmount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="freezedAmount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="borrowLimitAmount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="version" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="unReceiveInterest" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="unReceivePrincipal" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="unReturnAmount" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="remainBorrowLimit" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="standbyone" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="standbytwo" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="standbythree" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="standbyfour" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
    </constructor>
  </resultMap>
  <insert id="insert">
    insert into `account` (id,version,tradePassword, usableAmount, freezedAmount,borrowLimit, unReceiveInterest, unReceivePrincipal, unReturnAmount, remainBorrowLimit,standbyone.standbytwo,standbythree,standbyfour)
    values (#{id},0,#{tradePassword,jdbcType=VARCHAR}, #{usableAmount,jdbcType=DECIMAL}, #{freezedAmount,jdbcType=DECIMAL},#{verifyCode}, #{borrowLimit,jdbcType=DECIMAL}, #{unReceiveInterest,jdbcType=DECIMAL}, #{unReceivePrincipal,jdbcType=DECIMAL}, #{unReturnAmount,jdbcType=DECIMAL}, #{remainBorrowLimit,jdbcType=DECIMAL},#{standbyone,jdbcType=VARCHAR},#{standbytwo,jdbcType=VARCHAR},#{standbythree,jdbcType=BIGINT},#{standbyfour,jdbcType=DECIMAL})
  </insert>
  
  <update id="updateByPrimaryKey">
    update `account`
    set 
      version = version+1,
      tradePassword = #{tradePassword,jdbcType=VARCHAR},
      usableAmount = #{usableAmount,jdbcType=DECIMAL},
      freezedAmount = #{freezedAmount,jdbcType=DECIMAL},
      borrowLimit = #{borrowLimit,jdbcType=DECIMAL},
      unReceiveInterest = #{unReceiveInterest,jdbcType=DECIMAL},
      unReceivePrincipal = #{unReceivePrincipal,jdbcType=DECIMAL},
      unReturnAmount = #{unReturnAmount,jdbcType=DECIMAL},
      remainBorrowLimit = #{remainBorrowLimit,jdbcType=DECIMAL},
      standbyone = #{standbyone,jdbcType=VARCHAR},
        standbytwo = #{standbyone,jdbcType=VARCHAR},
        standbythree = #{standbytwo,jdbcType=BIGINT},
        standbyfour = #{standbythree,jdbcType=DECIMAL}
    where id = #{id,jdbcType=BIGINT} AND version =#{version}
  </update>
  
  <sql id="base_column">
  	id, tradePassword, usableAmount, freezedAmount, borrowLimit, version, unReceiveInterest, verifyCode,
    unReceivePrincipal, unReturnAmount, remainBorrowLimit,standbyone,standbytwo,standbythree,standbyfour
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" >
    select <include refid="base_column" />
    from `account`
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="selectAll" resultMap="BaseResultMap">
  	select <include refid="base_column" />
    from `account`
  </select>
</mapper>